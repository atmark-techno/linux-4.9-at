/*
 * Copyright (C) 2018 Atmark Techno, Inc. All Rights Reserved.
 *
 * This file is dual-licensed: you can use it either under the terms
 * of the GPL or the X11 license, at your option. Note that this dual
 * licensing only applies to this file, and not this project as a
 * whole.
 *
 *  a) This file is free software; you can redistribute it and/or
 *     modify it under the terms of the GNU General Public License as
 *     published by the Free Software Foundation; either version 2 of the
 *     License, or (at your option) any later version.
 *
 *     This file is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 * Or, alternatively,
 *
 *  b) Permission is hereby granted, free of charge, to any person
 *     obtaining a copy of this software and associated documentation
 *     files (the "Software"), to deal in the Software without
 *     restriction, including without limitation the rights to use,
 *     copy, modify, merge, publish, distribute, sublicense, and/or
 *     sell copies of the Software, and to permit persons to whom the
 *     Software is furnished to do so, subject to the following
 *     conditions:
 *
 *     The above copyright notice and this permission notice shall be
 *     included in all copies or substantial portions of the Software.
 *
 *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 *     OTHER DEALINGS IN THE SOFTWARE.
 */

/dts-v1/;

#include "imx7d.dtsi"
#include "armadillo_iotg_addon.dtsi"

/ {
	model = "Atmark-Techno Armadillo-IoT Gateway G3 M1 Board";
	compatible = "at,armadillo-iotg-g3", "fsl,imx7d";

	memory {
		reg = <0x80000000 0x20000000>;
	};

	regulators: regulators0 {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		reg_usb_otg1_vbus: regulator@0 {
			compatible = "regulator-fixed";
			reg = <0>;
			regulator-name = "USB_OTG1_VBUS";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			gpio = <&gpio4 15 GPIO_ACTIVE_HIGH>;
			enable-active-high;
		};

		reg_sd1_vmmc: regulator-1 {
			compatible = "regulator-fixed";
			regulator-name = "VDD_SD1";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			gpio = <&gpio5 2 GPIO_ACTIVE_HIGH>;
			enable-active-high;
			regulator-boot-on;
		};

		reg_ec25_vbat: regulator-2 {
			compatible = "regulator-fixed";
			regulator-name = "EC25_VBAT";
			regulator-min-microvolt = <3800000>;
			regulator-max-microvolt = <3800000>;
			gpio = <&gpio_bmic 1 GPIO_ACTIVE_LOW>;
			off-on-delay = <100000>;
			startup-delay-us = <30000>;
			regulator-boot-on;
		};
	};

	ec25_reset: ec25-reset {
		compatible = "ec25-reset";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_ec25_reset>;
		gpio-pwrkey = <&gpio4 17 GPIO_ACTIVE_HIGH>;
		gpio-reset = <&gpio4 18 GPIO_ACTIVE_HIGH>;
		gpio-status = <&gpio3 28 GPIO_ACTIVE_HIGH>;
		vbat-supply = <&reg_ec25_vbat>;
	};

	gpio-keys {
		compatible = "gpio-keys";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_gpio_keys &pinctrl_lpsr_gpio_keys>;

		sw1 {
			label = "SW1";
			gpios = <&gpio1 2 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_1>;
		};
		sw2 {
			label = "SW2";
			gpios = <&gpio3 22 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_2>;
		};
		sw3 {
			label = "SW3";
			gpios = <&gpio3 23 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_3>;
		};
	};

	gpio-leds {
		compatible = "gpio-leds";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_gpio_leds>;

		LED3 {
			label = "led1";
			gpios = <&gpio3 11 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "default-on";
		};
		LED2 {
			label = "led2";
			gpios = <&gpio3 10 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "default-on";
		};
		LED4 {
			label = "led3";
			gpios = <&gpio3 12 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "none";
		};
		LED5 {
			label = "led4";
			gpios = <&gpio3 13 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "none";
		};
	};

	usdhc3_pwrseq: pwrseq@0 {
		compatible = "mmc-pwrseq-emmc";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_usdhc3_pwrseq>;
		reset-gpios = <&gpio6 11 GPIO_ACTIVE_LOW>;
	};

	poweroff {
		compatible = "gpio-poweroff";
		gpios = <&gpio_bmic 2 GPIO_ACTIVE_LOW>;
	};

	bcmdhd-configs {
		ccode = "JP"; /* country code from ISO 3166 */
	};
};

&cpu0 {
	arm-supply = <&sw1a_reg>;
};

&fec2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_enet2>;
	assigned-clocks = <&clks IMX7D_ENET2_TIME_ROOT_SRC>,
			  <&clks IMX7D_ENET2_TIME_ROOT_CLK>;
	assigned-clock-parents = <&clks IMX7D_PLL_ENET_MAIN_100M_CLK>;
	assigned-clock-rates = <0>, <100000000>;
	phy-mode = "rgmii";
	phy-handle = <&ethphy0>;
	fsl,magic-packet;
	no-mac-init;
	status = "okay";

	mdio {
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy0: ethernet-phy@0 {
			reg = <0>;
		};
	};
};

&i2c4 {
	clock-frequency = <10000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c4>;
	status = "okay";

	rtc: bmic_rtc@11 {
		compatible = "at,bmic_rtc";
		reg = <0x11>;
		irq-gpio = <&gpio1 13 GPIO_ACTIVE_HIGH>;
	};

	adc: bmic_adc@12 {
		compatible = "at,bmic_adc";
		reg = <0x12>;
		vref-supply = <&reg_bmic>;
		irq-gpio = <&gpio1 13 GPIO_ACTIVE_HIGH>;
	};

	thermal: bmic_thermal@13 {
		compatible = "at,bmic_thermal";
		reg = <0x13>;
		vref-supply = <&reg_bmic>;
	};

	gpio_bmic: bmic_gpio@14 {
		compatible = "at,bmic_gpio";
		reg = <0x14>;
		gpio-controller;
		#gpio-cells = <2>;
	};

	reg_bmic: bmic_regulator@16 {
		compatible = "at,bmic_regulator";
		reg = <0x16>;
		regulator-name = "BMIC_VREF";
		regulator-min-microvolt = <1710000>;
		regulator-max-microvolt = <3600000>;
		regulator-boot-on;
		regulator-always-on;
	};

	usb_hub: usb3503@08 {
		compatible = "smsc,usb3503";
		reg = <0x08>;

		clocks = <&clks IMX7D_CLKO2_ROOT_PRE_DIV>;
		clock-names = "refclk";

		refclk-frequency = <24000000>;
		vsns21-squelch = <0x60>;
		intn-gpios = <&gpio2 14 GPIO_ACTIVE_HIGH>;
		connect-gpios = <&gpio2 15 GPIO_ACTIVE_HIGH>;
		reset-gpios = <&gpio2 13 GPIO_ACTIVE_HIGH>;
		initial-mode = <1>;	/* MODE_HUB */
	};

	pmic: pfuze3000@09 {
		compatible = "fsl,pfuze3000";
		reg = <0x09>;

		regulators {
			sw1a_reg: sw1a {
				regulator-min-microvolt = <700000>;
				regulator-max-microvolt = <1475000>;
				regulator-boot-on;
				regulator-always-on;
				regulator-ramp-delay = <6250>;
			};

			/* use sw1c_reg to align with pfuze100/pfuze200 */
			sw1c_reg: sw1b {
				regulator-min-microvolt = <700000>;
				regulator-max-microvolt = <1475000>;
				regulator-boot-on;
				regulator-always-on;
				regulator-ramp-delay = <6250>;
			};

			sw2_reg: sw2 {
				regulator-min-microvolt = <1500000>;
				regulator-max-microvolt = <1850000>;
				regulator-boot-on;
				regulator-always-on;
			};

			sw3a_reg: sw3 {
				regulator-min-microvolt = <900000>;
				regulator-max-microvolt = <1650000>;
				regulator-boot-on;
				regulator-always-on;
			};

			swbst_reg: swbst {
				regulator-min-microvolt = <5000000>;
				regulator-max-microvolt = <5150000>;
			};

			snvs_reg: vsnvs {
				regulator-min-microvolt = <1000000>;
				regulator-max-microvolt = <3000000>;
				regulator-boot-on;
				regulator-always-on;
			};

			vref_reg: vrefddr {
				regulator-boot-on;
				regulator-always-on;
			};

			vgen1_reg: vldo1 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vgen2_reg: vldo2 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1550000>;
			};

			vgen3_reg: vccsd {
				regulator-min-microvolt = <2850000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vgen4_reg: v33 {
				regulator-min-microvolt = <2850000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vgen5_reg: vldo3 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vgen6_reg: vldo4 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};
		};
	};
};

&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hog>;

	armadillo-iotg-g3 {
		pinctrl_hog: hoggrp {
			fsl,pins = <
				/* USDHC1 */
				MX7D_PAD_GPIO1_IO08__SD1_VSELECT	0x59 /* VSELECT */

				/* EC25-J */
				MX7D_PAD_LCD_DATA16__GPIO3_IO21		0x00 /* GPIO_WWAN_USB_VBUS */

				/* USB3503 */
				MX7D_PAD_EPDC_DATA13__GPIO2_IO13	0x00 /* GPIO_USB_HUB_RESET_N */
				MX7D_PAD_EPDC_DATA14__GPIO2_IO14	0x04 /* GPIO_USB_HUB_INT_N */
				MX7D_PAD_EPDC_DATA15__GPIO2_IO15	0x00 /* GPIO_USB_HUB_CON */

				/* MCU */
				MX7D_PAD_GPIO1_IO13__GPIO1_IO13		0x40000000 /* MCU_INTB */
			>;
		};

		pinctrl_enet2: enet2grp {
			fsl,pins = <
				MX7D_PAD_GPIO1_IO15__ENET2_MDC		0x3
				MX7D_PAD_GPIO1_IO14__ENET2_MDIO		0x3

				MX7D_PAD_EPDC_GDSP__ENET2_RGMII_TXC		0x1
				MX7D_PAD_EPDC_GDRL__ENET2_RGMII_TX_CTL		0x1
				MX7D_PAD_EPDC_SDCE2__ENET2_RGMII_TD0		0x1
				MX7D_PAD_EPDC_SDCE3__ENET2_RGMII_TD1		0x1
				MX7D_PAD_EPDC_GDCLK__ENET2_RGMII_TD2		0x1
				MX7D_PAD_EPDC_GDOE__ENET2_RGMII_TD3		0x1

				MX7D_PAD_EPDC_SDCE1__ENET2_RGMII_RXC		0x1
				MX7D_PAD_EPDC_SDCE0__ENET2_RGMII_RX_CTL		0x1
				MX7D_PAD_EPDC_SDCLK__ENET2_RGMII_RD0		0x1
				MX7D_PAD_EPDC_SDLE__ENET2_RGMII_RD1		0x1
				MX7D_PAD_EPDC_SDOE__ENET2_RGMII_RD2		0x1
				MX7D_PAD_EPDC_SDSHR__ENET2_RGMII_RD3		0x1
				MX7D_PAD_EPDC_BDR1__GPIO2_IO29 0x00 /* GPIO_LAN1_RST_N */
				MX7D_PAD_EPDC_BDR0__GPIO2_IO28 0x00 /* GPIO_LAN1_INT_N */
				MX7D_PAD_EPDC_PWR_COM__GPIO2_IO30 0x00 /* GPIO_LAN1_COMA_MODE */
			>;
		};

		pinctrl_usbotg1: usbotg1grp {
			fsl,pins = <
				MX7D_PAD_I2C4_SDA__GPIO4_IO15 0x00
			>;
		};

		pinctrl_usdhc1: usdhc1grp {
			fsl,pins = <
				MX7D_PAD_SD1_CMD__SD1_CMD	0x0a
				MX7D_PAD_SD1_CLK__SD1_CLK	0x0a
				MX7D_PAD_SD1_DATA0__SD1_DATA0	0x0a
				MX7D_PAD_SD1_DATA1__SD1_DATA1	0x0a
				MX7D_PAD_SD1_DATA2__SD1_DATA2	0x0a
				MX7D_PAD_SD1_DATA3__SD1_DATA3	0x0a
				MX7D_PAD_SD1_CD_B__GPIO5_IO0	0x00
				MX7D_PAD_SD1_WP__GPIO5_IO1	0x00
				MX7D_PAD_SD1_RESET_B__GPIO5_IO2	0x00
			>;
		};

		pinctrl_usdhc1_100mhz: usdhc1grp_100mhz {
			fsl,pins = <
				MX7D_PAD_SD1_CMD__SD1_CMD	0x09
				MX7D_PAD_SD1_CLK__SD1_CLK	0x0a
				MX7D_PAD_SD1_DATA0__SD1_DATA0	0x09
				MX7D_PAD_SD1_DATA1__SD1_DATA1	0x09
				MX7D_PAD_SD1_DATA2__SD1_DATA2	0x09
				MX7D_PAD_SD1_DATA3__SD1_DATA3	0x09
			>;
		};

		pinctrl_usdhc1_200mhz: usdhc1grp_200mhz {
			fsl,pins = <
				MX7D_PAD_SD1_CMD__SD1_CMD	0x0b
				MX7D_PAD_SD1_CLK__SD1_CLK	0x09
				MX7D_PAD_SD1_DATA0__SD1_DATA0	0x0b
				MX7D_PAD_SD1_DATA1__SD1_DATA1	0x0b
				MX7D_PAD_SD1_DATA2__SD1_DATA2	0x0b
				MX7D_PAD_SD1_DATA3__SD1_DATA3	0x0b
			>;
		};

		pinctrl_usdhc1_power_off: usdhc1grp_power_off {
			fsl,pins = <
				MX7D_PAD_SD1_CMD__GPIO5_IO4	0x00
				MX7D_PAD_SD1_DATA0__GPIO5_IO5	0x00
				MX7D_PAD_SD1_DATA1__GPIO5_IO6	0x00
				MX7D_PAD_SD1_DATA2__GPIO5_IO7	0x00
				MX7D_PAD_SD1_DATA3__GPIO5_IO8	0x00
			>;
		};

		pinctrl_usdhc3: usdhc3grp {
			fsl,pins = <
				MX7D_PAD_SD3_CMD__SD3_CMD	0x0a
				MX7D_PAD_SD3_CLK__SD3_CLK	0x0a
				MX7D_PAD_SD3_DATA0__SD3_DATA0	0x0a
				MX7D_PAD_SD3_DATA1__SD3_DATA1	0x0a
				MX7D_PAD_SD3_DATA2__SD3_DATA2	0x0a
				MX7D_PAD_SD3_DATA3__SD3_DATA3	0x0a
				MX7D_PAD_SD3_DATA4__SD3_DATA4	0x0a
				MX7D_PAD_SD3_DATA5__SD3_DATA5	0x0a
				MX7D_PAD_SD3_DATA6__SD3_DATA6	0x0a
				MX7D_PAD_SD3_DATA7__SD3_DATA7	0x0a
				MX7D_PAD_SD3_STROBE__SD3_STROBE	0x0a
			>;
		};

		pinctrl_usdhc3_pwrseq: pwrseq-usdhc3grp {
			fsl,pins = <
				MX7D_PAD_SD3_RESET_B__GPIO6_IO11	0x4000000a
			>;
		};

		pinctrl_gpio_keys: gpio_keysgrp {
			fsl,pins = <
				MX7D_PAD_LCD_DATA17__GPIO3_IO22	0x00 /* SW2 */
				MX7D_PAD_LCD_DATA18__GPIO3_IO23	0x00 /* SW3 */
			>;
		};

		pinctrl_gpio_leds: gpio_ledsgrp {
			fsl,pins = <
				MX7D_PAD_LCD_DATA05__GPIO3_IO10	0x00
				MX7D_PAD_LCD_DATA06__GPIO3_IO11	0x00
				MX7D_PAD_LCD_DATA07__GPIO3_IO12	0x00
				MX7D_PAD_LCD_DATA08__GPIO3_IO13	0x00
			>;
		};

		pinctrl_i2c4: i2c4grp {
			fsl,pins = <
				MX7D_PAD_GPIO1_IO11__I2C4_SDA	0x4000007f
				MX7D_PAD_GPIO1_IO10__I2C4_SCL	0x4000007f
			>;
		};

		pinctrl_pcie: pciegrp {
			fsl,pins = <
				MX7D_PAD_SAI1_RX_DATA__GPIO6_IO12	0x00 /* PCI_WLAN_RESET# */
				MX7D_PAD_SAI1_TX_BCLK__GPIO6_IO13	0x00 /* PCI_WLAN_DISABLE# */
				MX7D_PAD_ENET1_CRS__GPIO7_IO14		0x00 /* GPIO_PCIE_PWREN */
				MX7D_PAD_SAI1_RX_BCLK__GPIO6_IO17	0x00 /* GPIO_PCI_CLKREQ# */
				MX7D_PAD_SAI1_RX_SYNC__GPIO6_IO16	0x10 /* GPIO_PCI_COEX2 */
				MX7D_PAD_SAI1_TX_DATA__GPIO6_IO15	0x10 /* GPIO_PCI_COEX1 */
				MX7D_PAD_SAI1_TX_SYNC__GPIO6_IO14	0x00 /* GPIO_PCI_WAKE# */
			>;
		};

		pinctrl_uart7: uart7grp {
			fsl,pins = <
				MX7D_PAD_ECSPI2_SCLK__UART7_DCE_RX	0x70
				MX7D_PAD_ECSPI2_MOSI__UART7_DCE_TX	0x00
				MX7D_PAD_ECSPI2_SS0__UART7_DCE_CTS	0x00
				MX7D_PAD_ECSPI2_MISO__UART7_DCE_RTS	0x10
			>;
		};

		pinctrl_ec25_reset: ec25_resetgrp {
			fsl,pins = <
				MX7D_PAD_ECSPI1_MOSI__GPIO4_IO17	0x00
				MX7D_PAD_ECSPI1_MISO__GPIO4_IO18	0x00
				MX7D_PAD_LCD_DATA23__GPIO3_IO28		0x40000000
			>;
		};
	};
};

&iomuxc_lpsr {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hog_2>;

	armadillo-iotg-g3 {
		pinctrl_hog_2: hoggrp-2 {
			fsl,pins = <
				MX7D_PAD_GPIO1_IO00__WDOD1_WDOG_B	0x74
				MX7D_PAD_GPIO1_IO03__CCM_CLKO2		0x0a /* USB_HUB_REFCLK */
			>;
		};

		pinctrl_lpsr_uart5: lpsr_uart5grp {
			fsl,pins = <
				MX7D_PAD_GPIO1_IO07__UART5_DCE_TX	0x00
				MX7D_PAD_GPIO1_IO06__UART5_DCE_RX	0x79
				MX7D_PAD_GPIO1_IO05__UART5_DCE_RTS	0x79
				MX7D_PAD_GPIO1_IO04__UART5_DCE_CTS	0x00
			>;
		};

		pinctrl_lpsr_gpio_keys: lpsr_gpio_keysgrp {
			fsl,pins = <
				MX7D_PAD_GPIO1_IO02__GPIO1_IO2	0x00 /* SW1 */
			>;
		};
	};
};

&pcie_phy{
	status = "okay";
};

&pcie {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pcie>;

	reset-gpio = <&gpio6 12 GPIO_ACTIVE_LOW>;
	disable-gpio = <&gpio6 13 GPIO_ACTIVE_LOW>;
	disable-gpio-open-drain;
	power-on-gpio = <&gpio7 14 GPIO_ACTIVE_HIGH>;
	clkreq-gpio = <&gpio6 17 GPIO_ACTIVE_HIGH>;
	wake-gpio = <&gpio6 14 GPIO_ACTIVE_HIGH>;
	status = "okay";
};

&uart5 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_lpsr_uart5>;
	assigned-clocks = <&clks IMX7D_UART5_ROOT_SRC>;
	assigned-clock-parents = <&clks IMX7D_PLL_SYS_MAIN_240M_CLK>;
	status = "okay";
};

&uart7 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart7>;
	assigned-clocks = <&clks IMX7D_UART7_ROOT_SRC>;
	assigned-clock-parents = <&clks IMX7D_OSC_24M_CLK>;
	fsl,uart-has-rtscts;
	status = "okay";
};

&usbotg1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usbotg1>;
	vbus-supply = <&reg_usb_otg1_vbus>;
	dr_mode = "host";
	status = "okay";
};

&usbh {
	status = "okay";
};

&usdhc1 {
	pinctrl-names = "default", "state_100mhz", "state_200mhz",
			"state_power_off";
	pinctrl-0 = <&pinctrl_usdhc1>;
	pinctrl-1 = <&pinctrl_usdhc1_100mhz>;
	pinctrl-2 = <&pinctrl_usdhc1_200mhz>;
	pinctrl-3 = <&pinctrl_usdhc1_power_off>;
	cd-gpios = <&gpio5 0 GPIO_ACTIVE_LOW>;
	wp-gpios = <&gpio5 1 GPIO_ACTIVE_HIGH>;
	pinctrl-assert-gpios = <&gpio5 4 GPIO_ACTIVE_LOW>,	/* SD1_CMD */
			       <&gpio5 5 GPIO_ACTIVE_LOW>,	/* SD1_DATA0 */
			       <&gpio5 6 GPIO_ACTIVE_LOW>,	/* SD1_DATA1 */
			       <&gpio5 7 GPIO_ACTIVE_LOW>,	/* SD1_DATA2 */
			       <&gpio5 8 GPIO_ACTIVE_LOW>;	/* SD1_DATA3 */
	tuning-step = <2>;
	vmmc-supply = <&reg_sd1_vmmc>;
	enable-sdio-wakeup;
	bus-width = <4>;
	keep-power-in-suspend;
	support-clk-limit;
	fsl,no-ddr50-support;
	status = "okay";
};

&usdhc3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc3>;
	assigned-clocks = <&clks IMX7D_USDHC3_ROOT_CLK>;
	assigned-clock-rates = <400000000>;
	bus-width = <8>;
	fsl,tuning-step = <2>;
	non-removable;
	mmc-pwrseq = <&usdhc3_pwrseq>;
	status = "okay";
};

&wdog1 {
	timeout-sec = <10>;
	fsl,ext-reset-output;
};

&gpio1 {
	mcu_intb {
		gpio-hog;
		gpios = <13 GPIO_ACTIVE_HIGH>;
		input;
		line-name = "MCU_INTB";
	};
};

&gpio2 {
	sven {
		gpio-hog;
		gpios = <11 GPIO_ACTIVE_HIGH>;
		output-high;
		line-name = "SVEN";
	};

	lan1_int_n {
		gpio-hog;
		gpios = <28 GPIO_ACTIVE_HIGH>;
		input;
		line-name = "LAN1_INT_N";
	};

	lan1_coma_mode {
		gpio-hog;
		gpios = <30 GPIO_ACTIVE_HIGH>;
		output-low;
		line-name = "LAN1_COMA_MODE";
	};
};

&gpio3 {
	ec25_usb_vbus {
		gpio-hog;
		gpios = <21 GPIO_ACTIVE_LOW>;
		output-low;
		line-name = "EC25_USB_VBUS";
	};
};
